{"version":3,"sources":["components/Nav/Nav.js","components/Search/Search.js","components/RecipeInfo/RecipeInfo.js","components/Recipe/Recipe.js","components/RecipeList/RecipeList.js","components/App.js","serviceWorker.js","index.js"],"names":["Nav","react_default","a","createElement","className","Search","props","action","onSubmit","handleSubmit","placeholder","type","name","onChange","handleChange","RecipeInfo","_ref","ingredients","label","image","source","servings","healthLabels","dietLabels","url","hideModal","id","src","alt","class","map","ingredient","text","length","labels","href","target","role","onClick","Recipe","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setShow","setState","show","state","_this2","Math","round","calories","totalTime","components_RecipeInfo_RecipeInfo","yield","React","Component","RecipeList","console","log","recipes","recipe","components_Recipe_Recipe","key","uuidv4","viewMovieInfo","movieId","App","e","preventDefault","fetch","concat","searchTerm","then","data","json","toConsumableArray","hits","value","query","showModal","components_Nav_Nav","components_Search_Search","components_RecipeList_RecipeList","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.59e01b80.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Nav.css'\r\n\r\nconst Nav=()=>{\r\n    return(\r\n        <div className='nav-container'>\r\n            <div >\r\n               <h5>RECIPE APPLICATION </h5>\r\n            </div>\r\n            </div>\r\n    )\r\n}\r\nexport default Nav","import React from 'react'\r\nimport './Search.css'\r\n\r\nconst Search= (props)=>{\r\n    return(\r\n        <div className=\"search\">\r\n        \r\n              \r\n                   \r\n                        <div className=\"search-container\"> \r\n                        <form action=\"\" onSubmit={props.handleSubmit}>\r\n                            <input placeholder=\"Search Recipe...\" type=\"text\" name=\"search\" onChange={props.handleChange}/>\r\n                            <button type=\"submit\">Search</button>\r\n                            </form>\r\n                        </div>\r\n                   \r\n                \r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search ","\r\nimport React from \"react\";\r\n\r\nimport './RecipeInfo.css'\r\n\r\nconst RecipeInfo = ({ ingredients,label,image,source,servings,healthLabels,dietLabels,url,hideModal }) => {\r\n   \r\n  \r\n    return (\r\n      <div>\r\n        <div id=\"alert\">\r\n        <div id=\"alert-container\">\r\n        <div id=\"alert-text-container\"> \r\n           \r\n        <img src={image} alt=\"slika\"/>      \r\n     <h1 >{label}</h1>\r\n     <div className=\"paragraph-by\">By  {source}</div>\r\n\r\n    <h2>Ingredients</h2>\r\n    <div className=\"serves-div\"><i class=\"fas fa-info\"></i>  With this ingredients you will make {servings} foodies</div>\r\n     <ul className=\"ingredient-list\">\r\n            {ingredients.map((ingredient)=>(          \r\n                    <li className=\"ingredient-text\"><i class=\"far fa-arrow-alt-circle-right\"></i>  {ingredient.text}</li>\r\n             ))}\r\n            </ul>\r\n            {healthLabels.length > 0 ? (\r\n            <p className='label-container'><i class=\"fas fa-check\"></i>  Health Labels: {healthLabels.map((label) => label + \", \")}\r\n            </p>\r\n          ) : null}\r\n {dietLabels.length > 0 ? (\r\n            <p className='label-container'><i class=\"fas fa-check\"></i> Diet Labels:  {dietLabels.map((labels) => labels + \", \")}\r\n            </p>\r\n          ) : null}\r\n\r\n<a href={url} target=\"blank\" role=\"button\">View Original Recipe</a>\r\n<div id=\"alert-buttons\">\r\n                <button className=\"alert-btn\" id=\"cancel-alert-btn\" onClick={hideModal}\r\n                >CANCEL</button>\r\n                </div>\r\n            </div>\r\n \r\n</div>\r\n</div>\r\n</div>\r\n        );\r\n  }\r\n\r\n\r\nexport default RecipeInfo;","\r\nimport React  from \"react\";\r\n import './Recipe.css'\r\n\r\nimport RecipeInfo from '../RecipeInfo/RecipeInfo'\r\n\r\nclass Recipe extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n      show: false,\r\n      \r\n     };\r\n \r\n  }\r\n  setShow = () => {\r\n    this.setState({ show: true });\r\n  };\r\n  hideModal = () => {\r\n    this.setState({ show: false });\r\n  };\r\nrender(){\r\n  return(\r\n \r\n      <div className=\"column-div\">\r\n          <div className='card-div'>\r\n         \r\n           <img src={this.props.image} alt=\"slika\"/>    \r\n            <h1>{this.props.label}</h1>\r\n           \r\n            <div className=\"paragraph-div\">\r\n             <p className=\"preparation\" ><i className=\"fas fa-balance-scale\"></i> Calories:  {Math.round(this.props.calories)}</p> \r\n            \r\n           \r\n          <p ><i className=\"fas fa-history\"></i> Preparation time:{this.props.totalTime} mins</p>\r\n        \r\n         \r\n            \r\n             </div>\r\n             <p><button  className=\"button-detail button-detail1\" onClick={() => this.setShow(this.state.show)}>READ MORE</button>\r\n      {this.state.show && <RecipeInfo hideModal={this.hideModal} ingredients={this.props.ingredients} label={this.props.label} image={this.props.image} source={this.props.source} servings={this.props.yield} healthLabels={this.props.healthLabels} dietLabels={this.props.dietLabels} url={this.props.url}/>}\r\n      </p> \r\n     \r\n \r\n \r\n   </div>\r\n        \r\n\r\n          \r\n    </div>\r\n              \r\n        \r\n      \r\n  )\r\n}}\r\nexport default Recipe","import React from 'react'\r\n import Recipe from '../Recipe/Recipe'\r\n\r\n import {v4 as uuidv4} from \"uuid\"\r\n\r\nconst RecipeList=(props)=>{\r\n console.log(props.id)\r\n \r\n \r\n    return(\r\n    \r\n        <div >\r\n            <div>\r\n            <div >\r\n               \r\n                {\r\n                   props.recipes !== [] && props.recipes.map((recipe)=>(\r\n                       \r\n                            <Recipe  key={uuidv4()} \r\n                            viewMovieInfo={props.viewMovieInfo}\r\n                            movieId={props.id} \r\n                            label={recipe.recipe.label} calories={recipe.recipe.calories} image={recipe.recipe.image} \r\n                            url={recipe.recipe.url}\r\n                            totalTime={recipe.recipe.totalTime}\r\n                            servings={recipe.recipe.yield}\r\n                            source={recipe.recipe.source}\r\n                            healthLabels={recipe.recipe.healthLabels}\r\n                            dietLabels={recipe.recipe.dietLabels}\r\n                            ingredients={recipe.recipe.ingredients}\r\n                       \r\n                            \r\n                            />\r\n                           \r\n                           \r\n                        )\r\n                    )\r\n                   }\r\n               \r\n                \r\n                 </div>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default RecipeList","import React from 'react'\r\nimport Nav from './Nav/Nav'\r\nimport Search from './Search/Search'\r\n import RecipeList from './RecipeList/RecipeList'\r\n import {v4 as uuidv4} from \"uuid\"\r\n\r\n\r\n\r\n\r\nclass App  extends React.Component{\r\n    componentWillMount() {  \r\n        this.id = uuidv4();  \r\n      }  \r\n    constructor(){\r\n        super()\r\n        \r\n        this.state={\r\n            recipes:[],\r\n             searchTerm:'',\r\n             query:'',\r\n             hits:[],\r\n             ingredients:[],\r\n            showModal:null,\r\n            \r\n           \r\n\r\n        }\r\n      \r\n       \r\n    }\r\n  \r\n\r\n    handleSubmit=(e)=>{\r\n        \r\n        e.preventDefault()\r\n        fetch(`https://api.edamam.com/search?q=${this.state.searchTerm}&app_id=${'f7d48a86'}&app_key=${'2881e4a6866f6075e6c3a6c715d79944'}`)\r\n        .then(data=>data.json())\r\n        .then(data=>{\r\n            console.log(data)\r\n          \r\n            this.setState({recipes:[...data.hits]})\r\n           \r\n        })\r\n    }\r\n     handleChange=(e)=>{\r\n        this.setState({searchTerm:e.target.value})\r\n       \r\n }\r\n \r\n\r\n\r\n \r\n  \r\n\r\n    render(){\r\n        \r\n        // console.log(this.state.hits)\r\n        // console.log(this.state.recipes)\r\n       \r\n      \r\n        return  (\r\n            <div className='main-page'>\r\n\r\n<Nav/>\r\n<div><Search handleSubmit={this.handleSubmit} handleChange={this.handleChange}/>\r\n<RecipeList   recipes={this.state.recipes} id={uuidv4()} /></div>\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}